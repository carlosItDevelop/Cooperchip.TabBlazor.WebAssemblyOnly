@using TabBlazor

@inject IDataService Data

<style>
    .quick-table tr {
         height: 45px;
     }
</style>
<div class="card">
    <QuickTable TGridItem="Tabler.Docs.Data.Country" Virtualize="true" ItemsProvider="ItemsProvider" ItemSize="30" class="quick-table-example">
        <PropertyColumn Property="@(new Func<object, string>(x => ((Tabler.Docs.Data.Country)x).Name))" Sortable="true" IsDefaultSort="SortDirection.Ascending"></PropertyColumn>
        <PropertyColumn Property="@(new Func<object, string>(x => ((Tabler.Docs.Data.Country)x).Code))" Sortable="true"></PropertyColumn>
        <PropertyColumn Property="@(new Func<object, int>(x => ((Tabler.Docs.Data.Country)x).Medals.Gold))"></PropertyColumn>
    </QuickTable>
</div>

@code {

    private TabBlazor.Components.QuickTables.GridItemsProvider<Tabler.Docs.Data.Country> ItemsProvider { get; set; }

    protected override void OnInitialized()
    {
        ItemsProvider = async req =>
        {
            var sortBy = req.GetSortByProperties().SingleOrDefault();
            if (sortBy.PropertyName != null)
            {
                var gridItemsProviderResult = await Data.GetCountriesAsync(
                    req.StartIndex,
                    req.Count,
                    sortBy.PropertyName,
                    sortBy.Direction == TabBlazor.Components.QuickTables.SortDirection.Ascending,
                    req.CancellationToken);
                return new TabBlazor.Components.QuickTables.GridItemsProviderResult<Tabler.Docs.Data.Country>
                {
                    Items = gridItemsProviderResult.Items,
                    TotalItemCount = gridItemsProviderResult.TotalItemCount
                };
            }
            else
            {
                var gridItemsProviderResult = await Data.GetCountriesAsync(
                    req.StartIndex,
                    req.Count,
                    null,
                    true,
                    req.CancellationToken);
                return new TabBlazor.Components.QuickTables.GridItemsProviderResult<Tabler.Docs.Data.Country>
                {
                    Items = gridItemsProviderResult.Items,
                    TotalItemCount = gridItemsProviderResult.TotalItemCount
                };
            }
        };
    }

}
